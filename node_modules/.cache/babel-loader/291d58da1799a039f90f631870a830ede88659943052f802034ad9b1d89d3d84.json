{"ast":null,"code":"var _jsxFileName = \"/Users/niharsimhadri/MadHacks/react-flask-app/src/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nfunction UserProvider(props) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logs, setLogs] = useState({});\n  const user = {\n    username: username,\n    password: password,\n    logs: logs,\n    modifyUser: modifyUser\n  };\n  function modifyUser(updateUser) {\n    setUsername(updateUser.username);\n    setPassword(updateUser.password);\n    setLogs(updateUser.logs);\n  }\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(UserProvider, \"Hq2Kl8Fo4w7oVxM0kbFxBJguHCw=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","useState","createContext","jsxDEV","_jsxDEV","UserContext","UserProvider","props","_s","username","setUsername","password","setPassword","logs","setLogs","user","modifyUser","updateUser","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/niharsimhadri/MadHacks/react-flask-app/src/UserContext.js"],"sourcesContent":["import React, {useState, createContext} from \"react\"\n\nconst UserContext = createContext()\n\nfunction UserProvider(props) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [logs, setLogs] = useState({})\n\n    const user = {\n        username: username,\n        password: password,\n        logs: logs,\n        modifyUser: modifyUser\n    }\n\n    function modifyUser(updateUser) {\n        setUsername(updateUser.username)\n        setPassword(updateUser.password)\n        setLogs(updateUser.logs)\n    }\n\n    return (\n        <UserContext.Provider value={user}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport {UserContext, UserProvider}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,aAAa,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,gBAAGH,aAAa,CAAC,CAAC;AAEnC,SAASI,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMc,IAAI,GAAG;IACTN,QAAQ,EAAEA,QAAQ;IAClBE,QAAQ,EAAEA,QAAQ;IAClBE,IAAI,EAAEA,IAAI;IACVG,UAAU,EAAEA;EAChB,CAAC;EAED,SAASA,UAAUA,CAACC,UAAU,EAAE;IAC5BP,WAAW,CAACO,UAAU,CAACR,QAAQ,CAAC;IAChCG,WAAW,CAACK,UAAU,CAACN,QAAQ,CAAC;IAChCG,OAAO,CAACG,UAAU,CAACJ,IAAI,CAAC;EAC5B;EAEA,oBACIT,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAEJ,IAAK;IAAAK,QAAA,EAC7Bb,KAAK,CAACa;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B;AAAChB,EAAA,CAvBQF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAyBrB,SAAQD,WAAW,EAAEC,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}